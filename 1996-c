#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define endl "\n"
const int N=1000000+5;
//int h[5]={1,3,6,10,15};
//ll dp[N];
//vector<int>g[N];
bool vis[N];
//int level[N];
//ll cnt=0;
/*bool isSubsetSum(ll arr[], ll n, ll sum)
{
    if (sum == 0)
        return true;
    if (n == 0)
        return false;

    if (arr[n - 1] > sum)
        return isSubsetSum(arr, n - 1, sum);

    return isSubsetSum(arr, n - 1, sum)
           || isSubsetSum(arr, n - 1, sum - arr[n - 1]);
}*/

void solve(){
    int n, q;
    cin >> n >> q;
    string s1, s2;
    cin >> s1 >> s2;
    vector<vector<int>>v1(n + 1, vector<int>(27, 0));
    vector<vector<int>>v2(n + 1, vector<int>(27, 0));
    vector<int> ct1(27), ct2(27);

    for (int i = 0; i < n; i++) {
        ct1[s1[i] - 'a' + 1]++;
        ct2[s2[i] - 'a' + 1]++;
        v1[i + 1] = ct1;
        v2[i + 1] = ct2;
    }

    while (q--){
        int l, r;
        cin >> l >> r;
        int ans = 0;
        vector<int> c1(27), c2(27);
        for (int i = 1; i <= 26; i++){
            c1[i] = v1[r][i] - v1[l - 1][i];
            c2[i] = v2[r][i] - v2[l - 1][i];
            ans += min(c1[i], c2[i]);
        }
        ans = r - l + 1 - ans;
        cout << ans << endl;
    }
}

int main(){
    fast;
    ll t;
    cin>>t;
    while(t--){
        solve();
    }
}
